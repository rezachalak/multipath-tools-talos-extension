variant: scratch
name: multipath-tools
shell: /bin/bash
dependencies:
  - stage: base
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/lvm2:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/systemd-udevd:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/libjson-c:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/liburcu:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/libcap:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/libaio:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/util-linux:{{ .BUILD_ARG_PKGS }}"
steps:
  - sources:
      - url: https://github.com/opensvc/multipath-tools/archive/refs/tags/{{ .MULTIPATH_TOOLS_VERSION }}.tar.gz
        destination: multipath-tools.tar.gz
        sha256: {{ .MULTIPATH_TOOLS_SHA256 }}
        sha512: {{ .MULTIPATH_TOOLS_SHA512 }}
    env:
      PKG_CONFIG_PATH: /usr/lib/pkgconfig
    prepare:
      - |
        sed -i 's#$VERSION#{{ .VERSION }}#' /pkg/manifest.yaml
        tar -xzf multipath-tools.tar.gz --strip-components=1

        patch -p1 < /pkg/patches/fix-implicit-function-declaration-error.patch
        patch -p1 < /pkg/patches/disable-devt-test.patch
        patch -p1 < /pkg/patches/0001-Disable-O2.patch
    build:
      - |
        # Build with shared libraries, disable warnings as errors to avoid compilation failures
        # Use single thread to avoid segfaults
        make -j 1 prefix=/usr/local SYSTEMD="" WARN_ONLY=1
    install:
      - |
        make prefix=/usr/local DESTDIR=/rootfs install
      - |
        # Clean up unnecessary files
        rm -f /rootfs/usr/lib/tmpfiles.d/multipath.conf
        rm -f /rootfs/usr/lib/udev/kpartx_id
        rm -rf /rootfs/usr/local/share/

      - |
        mkdir -p /rootfs/usr/local/etc/containers
        mkdir -p /rootfs/usr/local/lib/containers/multipathd
        cp /pkg/multipathd.yaml /rootfs/usr/local/etc/containers/
    test:
      - |
        mkdir -p /extensions-validator-rootfs
        cp -r /rootfs/ /extensions-validator-rootfs/rootfs
        cp /pkg/manifest.yaml /extensions-validator-rootfs/manifest.yaml
        /extensions-validator validate --rootfs=/extensions-validator-rootfs --pkg-name="${PKG_NAME}"
finalize:
  - from: /rootfs
    to: /rootfs
  - from: /pkg/manifest.yaml
    to: /
