variant: alpine
name: multipath-tools
shell: /bin/bash
dependencies:
  - stage: base
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/lvm2:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/systemd-udevd:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/libjson-c:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/liburcu:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/libcap:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/libaio:{{ .BUILD_ARG_PKGS }}"
  - image: "{{ .BUILD_ARG_PKGS_PREFIX }}/util-linux:{{ .BUILD_ARG_PKGS }}"
steps:
  - sources:
      - url: https://github.com/opensvc/multipath-tools/archive/refs/tags/0.10.0.tar.gz
        destination: multipath-tools.tar.gz
        sha256: f2e67a1d2167f3945afab6f0697207a03678f5b2bd80f1f45958c6fa1dfb8eef
        sha512: 8f545609fa20df7547428f2929571dc0df87c17d9f61f11aad3559446c2e94755e18b1c4b3780b3de92ec2cbc450939ca15a9d6c95551eee4084064d83874b2d
    env:
      PKG_CONFIG_PATH: /usr/lib/pkgconfig
      prefix: /usr/local/lib/containers/multipathd
      LIB: /usr/lib
    prepare:
      - |
        sed -i 's#$VERSION#{{ .VERSION }}#' /pkg/manifest.yaml

      - |
        tar -xzf multipath-tools.tar.gz --strip-components=1

      # This removes a dependency on libgcc
      - |
        patch -p1 < /pkg/patches/disable-exception-handling.patch
    build:
      - |
        container_root=${prefix}
        mkdir -p "${container_root}"
        make -j $(nproc) prefix=${prefix} SYSTEMD=""
    install:
      - |
        make prefix=${prefix} DESTDIR=/rootfs install
        cp /rootfs${prefix}/sbin/multipathd /rootfs${prefix}/
      - |
        mkdir -p /rootfs/usr/local/etc/containers
        cp /pkg/multipathd.yaml /rootfs/usr/local/etc/containers/
      - |

      # This file wants to load kernel module `dm-multipath`.
      # Talos users should load kernel modules via MachineConfig instead.
      - |
        rm /rootfs/usr/lib/modules-load.d/multipath.conf
        rmdir /rootfs/usr/lib/modules-load.d

      # This file tries to create a tmpfs mount at `/var/run/multipath`.
      # TODO: Probably should do this in the extension service or elsewhere.
      - |
        rm /rootfs/usr/lib/tmpfiles.d/multipath.conf
        rmdir /rootfs/usr/lib/tmpfiles.d

      # TODO: Not sure what to do with this yet.
      - |
        rm /rootfs/usr/lib/udev/kpartx_id
    test:
      - |
        mkdir -p /extensions-validator-rootfs
        cp -r /rootfs/ /extensions-validator-rootfs/rootfs
        cp /pkg/manifest.yaml /extensions-validator-rootfs/manifest.yaml
        /extensions-validator validate --rootfs=/extensions-validator-rootfs --pkg-name="${PKG_NAME}"
finalize:
  - from: /rootfs
    to: /rootfs
  - from: /pkg/manifest.yaml
    to: /
